version: '3.8'

services:
  frontend:
    image: ghcr.io/ruitervanderley/fleetcare-frontend:latest
    # Para desenvolvimento, use build local:
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile.dev
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

  backend:
    image: ghcr.io/ruitervanderley/fleetcare-backend:latest
    # Para desenvolvimento, use build local:
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    volumes:
      - ./data:/app/data
      - ./PRODUTIVIDADE EQUIPAMENTOS.xlsx:/app/planilha.xlsx
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=fleetcare
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
